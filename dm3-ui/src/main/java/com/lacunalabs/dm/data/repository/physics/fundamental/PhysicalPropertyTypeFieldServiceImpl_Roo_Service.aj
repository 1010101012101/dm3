// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.lacunalabs.dm.data.repository.physics.fundamental;

import com.lacunalabs.dm.data.physics.fundamental.PhysicalPropertyTypeField;
import com.lacunalabs.dm.data.repository.physics.fundamental.PhysicalPropertyTypeFieldRepository;
import com.lacunalabs.dm.data.repository.physics.fundamental.PhysicalPropertyTypeFieldServiceImpl;
import java.math.BigInteger;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect PhysicalPropertyTypeFieldServiceImpl_Roo_Service {
    
    declare @type: PhysicalPropertyTypeFieldServiceImpl: @Service;
    
    declare @type: PhysicalPropertyTypeFieldServiceImpl: @Transactional;
    
    @Autowired
    PhysicalPropertyTypeFieldRepository PhysicalPropertyTypeFieldServiceImpl.physicalPropertyTypeFieldRepository;
    
    public long PhysicalPropertyTypeFieldServiceImpl.countAllPhysicalPropertyTypeFields() {
        return physicalPropertyTypeFieldRepository.count();
    }
    
    public void PhysicalPropertyTypeFieldServiceImpl.deletePhysicalPropertyTypeField(PhysicalPropertyTypeField physicalPropertyTypeField) {
        physicalPropertyTypeFieldRepository.delete(physicalPropertyTypeField);
    }
    
    public PhysicalPropertyTypeField PhysicalPropertyTypeFieldServiceImpl.findPhysicalPropertyTypeField(BigInteger id) {
        return physicalPropertyTypeFieldRepository.findOne(id);
    }
    
    public List<PhysicalPropertyTypeField> PhysicalPropertyTypeFieldServiceImpl.findAllPhysicalPropertyTypeFields() {
        return physicalPropertyTypeFieldRepository.findAll();
    }
    
    public List<PhysicalPropertyTypeField> PhysicalPropertyTypeFieldServiceImpl.findPhysicalPropertyTypeFieldEntries(int firstResult, int maxResults) {
        return physicalPropertyTypeFieldRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / maxResults, maxResults)).getContent();
    }
    
    public void PhysicalPropertyTypeFieldServiceImpl.savePhysicalPropertyTypeField(PhysicalPropertyTypeField physicalPropertyTypeField) {
        physicalPropertyTypeFieldRepository.save(physicalPropertyTypeField);
    }
    
    public PhysicalPropertyTypeField PhysicalPropertyTypeFieldServiceImpl.updatePhysicalPropertyTypeField(PhysicalPropertyTypeField physicalPropertyTypeField) {
        return physicalPropertyTypeFieldRepository.save(physicalPropertyTypeField);
    }
    
}
