// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.lacunalabs.dm.data.repository.physics.fundamental;

import com.lacunalabs.dm.data.physics.fundamental.ParticleBeam;
import com.lacunalabs.dm.data.repository.physics.fundamental.ParticleBeamRepository;
import com.lacunalabs.dm.data.repository.physics.fundamental.ParticleBeamServiceImpl;
import java.math.BigInteger;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect ParticleBeamServiceImpl_Roo_Service {
    
    declare @type: ParticleBeamServiceImpl: @Service;
    
    declare @type: ParticleBeamServiceImpl: @Transactional;
    
    @Autowired
    ParticleBeamRepository ParticleBeamServiceImpl.particleBeamRepository;
    
    public long ParticleBeamServiceImpl.countAllParticleBeams() {
        return particleBeamRepository.count();
    }
    
    public void ParticleBeamServiceImpl.deleteParticleBeam(ParticleBeam particleBeam) {
        particleBeamRepository.delete(particleBeam);
    }
    
    public ParticleBeam ParticleBeamServiceImpl.findParticleBeam(BigInteger id) {
        return particleBeamRepository.findOne(id);
    }
    
    public List<ParticleBeam> ParticleBeamServiceImpl.findAllParticleBeams() {
        return particleBeamRepository.findAll();
    }
    
    public List<ParticleBeam> ParticleBeamServiceImpl.findParticleBeamEntries(int firstResult, int maxResults) {
        return particleBeamRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / maxResults, maxResults)).getContent();
    }
    
    public void ParticleBeamServiceImpl.saveParticleBeam(ParticleBeam particleBeam) {
        particleBeamRepository.save(particleBeam);
    }
    
    public ParticleBeam ParticleBeamServiceImpl.updateParticleBeam(ParticleBeam particleBeam) {
        return particleBeamRepository.save(particleBeam);
    }
    
}
