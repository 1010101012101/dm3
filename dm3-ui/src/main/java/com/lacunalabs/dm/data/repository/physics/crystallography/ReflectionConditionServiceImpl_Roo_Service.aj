// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.lacunalabs.dm.data.repository.physics.crystallography;

import com.lacunalabs.dm.data.physics.crystallography.ReflectionCondition;
import com.lacunalabs.dm.data.repository.physics.crystallography.ReflectionConditionRepository;
import com.lacunalabs.dm.data.repository.physics.crystallography.ReflectionConditionServiceImpl;
import java.math.BigInteger;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect ReflectionConditionServiceImpl_Roo_Service {
    
    declare @type: ReflectionConditionServiceImpl: @Service;
    
    declare @type: ReflectionConditionServiceImpl: @Transactional;
    
    @Autowired
    ReflectionConditionRepository ReflectionConditionServiceImpl.reflectionConditionRepository;
    
    public long ReflectionConditionServiceImpl.countAllReflectionConditions() {
        return reflectionConditionRepository.count();
    }
    
    public void ReflectionConditionServiceImpl.deleteReflectionCondition(ReflectionCondition reflectionCondition) {
        reflectionConditionRepository.delete(reflectionCondition);
    }
    
    public ReflectionCondition ReflectionConditionServiceImpl.findReflectionCondition(BigInteger id) {
        return reflectionConditionRepository.findOne(id);
    }
    
    public List<ReflectionCondition> ReflectionConditionServiceImpl.findAllReflectionConditions() {
        return reflectionConditionRepository.findAll();
    }
    
    public List<ReflectionCondition> ReflectionConditionServiceImpl.findReflectionConditionEntries(int firstResult, int maxResults) {
        return reflectionConditionRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / maxResults, maxResults)).getContent();
    }
    
    public void ReflectionConditionServiceImpl.saveReflectionCondition(ReflectionCondition reflectionCondition) {
        reflectionConditionRepository.save(reflectionCondition);
    }
    
    public ReflectionCondition ReflectionConditionServiceImpl.updateReflectionCondition(ReflectionCondition reflectionCondition) {
        return reflectionConditionRepository.save(reflectionCondition);
    }
    
}
