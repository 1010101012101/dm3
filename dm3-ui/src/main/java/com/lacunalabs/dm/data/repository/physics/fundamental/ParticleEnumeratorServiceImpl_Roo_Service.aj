// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.lacunalabs.dm.data.repository.physics.fundamental;

import com.lacunalabs.dm.data.physics.fundamental.ParticleEnumerator;
import com.lacunalabs.dm.data.repository.physics.fundamental.ParticleEnumeratorRepository;
import com.lacunalabs.dm.data.repository.physics.fundamental.ParticleEnumeratorServiceImpl;
import java.math.BigInteger;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect ParticleEnumeratorServiceImpl_Roo_Service {
    
    declare @type: ParticleEnumeratorServiceImpl: @Service;
    
    declare @type: ParticleEnumeratorServiceImpl: @Transactional;
    
    @Autowired
    ParticleEnumeratorRepository ParticleEnumeratorServiceImpl.particleEnumeratorRepository;
    
    public long ParticleEnumeratorServiceImpl.countAllParticleEnumerators() {
        return particleEnumeratorRepository.count();
    }
    
    public void ParticleEnumeratorServiceImpl.deleteParticleEnumerator(ParticleEnumerator particleEnumerator) {
        particleEnumeratorRepository.delete(particleEnumerator);
    }
    
    public ParticleEnumerator ParticleEnumeratorServiceImpl.findParticleEnumerator(BigInteger id) {
        return particleEnumeratorRepository.findOne(id);
    }
    
    public List<ParticleEnumerator> ParticleEnumeratorServiceImpl.findAllParticleEnumerators() {
        return particleEnumeratorRepository.findAll();
    }
    
    public List<ParticleEnumerator> ParticleEnumeratorServiceImpl.findParticleEnumeratorEntries(int firstResult, int maxResults) {
        return particleEnumeratorRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / maxResults, maxResults)).getContent();
    }
    
    public void ParticleEnumeratorServiceImpl.saveParticleEnumerator(ParticleEnumerator particleEnumerator) {
        particleEnumeratorRepository.save(particleEnumerator);
    }
    
    public ParticleEnumerator ParticleEnumeratorServiceImpl.updateParticleEnumerator(ParticleEnumerator particleEnumerator) {
        return particleEnumeratorRepository.save(particleEnumerator);
    }
    
}
