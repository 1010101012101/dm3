// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.lacunalabs.dm.data.physics.instruments;

import com.lacunalabs.dm.data.physics.instruments.LensPhysicalProperty;
import com.lacunalabs.dm.data.physics.instruments.TemObjectiveLens;
import com.lacunalabs.dm.shared.physics.fundamental.MetaDataType;
import java.math.BigDecimal;
import java.util.Set;

privileged aspect TemObjectiveLens_Roo_JavaBean {
    
    public String TemObjectiveLens.getName() {
        return this.name;
    }
    
    public void TemObjectiveLens.setName(String name) {
        this.name = name;
    }
    
    public BigDecimal TemObjectiveLens.getChromaticAberration() {
        return this.chromaticAberration;
    }
    
    public void TemObjectiveLens.setChromaticAberration(BigDecimal chromaticAberration) {
        this.chromaticAberration = chromaticAberration;
    }
    
    public BigDecimal TemObjectiveLens.getSphericalAberration() {
        return this.sphericalAberration;
    }
    
    public void TemObjectiveLens.setSphericalAberration(BigDecimal sphericalAberration) {
        this.sphericalAberration = sphericalAberration;
    }
    
    public BigDecimal TemObjectiveLens.getDelVoltage() {
        return this.delVoltage;
    }
    
    public void TemObjectiveLens.setDelVoltage(BigDecimal delVoltage) {
        this.delVoltage = delVoltage;
    }
    
    public BigDecimal TemObjectiveLens.getDelCurrent() {
        return this.delCurrent;
    }
    
    public void TemObjectiveLens.setDelCurrent(BigDecimal delCurrent) {
        this.delCurrent = delCurrent;
    }
    
    public BigDecimal TemObjectiveLens.getChromaticSpread() {
        return this.chromaticSpread;
    }
    
    public void TemObjectiveLens.setChromaticSpread(BigDecimal chromaticSpread) {
        this.chromaticSpread = chromaticSpread;
    }
    
    public BigDecimal TemObjectiveLens.getConvergenceAngle() {
        return this.convergenceAngle;
    }
    
    public void TemObjectiveLens.setConvergenceAngle(BigDecimal convergenceAngle) {
        this.convergenceAngle = convergenceAngle;
    }
    
    public BigDecimal TemObjectiveLens.getAstigmatism() {
        return this.astigmatism;
    }
    
    public void TemObjectiveLens.setAstigmatism(BigDecimal astigmatism) {
        this.astigmatism = astigmatism;
    }
    
    public BigDecimal TemObjectiveLens.getStigmaticAngle() {
        return this.stigmaticAngle;
    }
    
    public void TemObjectiveLens.setStigmaticAngle(BigDecimal stigmaticAngle) {
        this.stigmaticAngle = stigmaticAngle;
    }
    
    public BigDecimal TemObjectiveLens.getDefocus() {
        return this.defocus;
    }
    
    public void TemObjectiveLens.setDefocus(BigDecimal defocus) {
        this.defocus = defocus;
    }
    
    public BigDecimal TemObjectiveLens.getDefocusSpread() {
        return this.defocusSpread;
    }
    
    public void TemObjectiveLens.setDefocusSpread(BigDecimal defocusSpread) {
        this.defocusSpread = defocusSpread;
    }
    
    public BigDecimal TemObjectiveLens.getLensCurrent() {
        return this.lensCurrent;
    }
    
    public void TemObjectiveLens.setLensCurrent(BigDecimal lensCurrent) {
        this.lensCurrent = lensCurrent;
    }
    
    public Set<LensPhysicalProperty> TemObjectiveLens.getLensProperties() {
        return this.lensProperties;
    }
    
    public void TemObjectiveLens.setLensProperties(Set<LensPhysicalProperty> lensProperties) {
        this.lensProperties = lensProperties;
    }
    
    public MetaDataType TemObjectiveLens.getMetadataType() {
        return this.metadataType;
    }
    
    public void TemObjectiveLens.setMetadataType(MetaDataType metadataType) {
        this.metadataType = metadataType;
    }
    
    public String TemObjectiveLens.getMetadata() {
        return this.metadata;
    }
    
    public void TemObjectiveLens.setMetadata(String metadata) {
        this.metadata = metadata;
    }
    
}
