// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.lacunalabs.dm.data.repository.physics.solidstate;

import com.lacunalabs.dm.data.physics.solidstate.Crystal;
import com.lacunalabs.dm.data.repository.physics.solidstate.CrystalRepository;
import com.lacunalabs.dm.data.repository.physics.solidstate.CrystalServiceImpl;
import java.math.BigInteger;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect CrystalServiceImpl_Roo_Service {
    
    declare @type: CrystalServiceImpl: @Service;
    
    declare @type: CrystalServiceImpl: @Transactional;
    
    @Autowired
    CrystalRepository CrystalServiceImpl.crystalRepository;
    
    public long CrystalServiceImpl.countAllCrystals() {
        return crystalRepository.count();
    }
    
    public void CrystalServiceImpl.deleteCrystal(Crystal crystal) {
        crystalRepository.delete(crystal);
    }
    
    public Crystal CrystalServiceImpl.findCrystal(BigInteger id) {
        return crystalRepository.findOne(id);
    }
    
    public List<Crystal> CrystalServiceImpl.findAllCrystals() {
        return crystalRepository.findAll();
    }
    
    public List<Crystal> CrystalServiceImpl.findCrystalEntries(int firstResult, int maxResults) {
        return crystalRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / maxResults, maxResults)).getContent();
    }
    
    public void CrystalServiceImpl.saveCrystal(Crystal crystal) {
        crystalRepository.save(crystal);
    }
    
    public Crystal CrystalServiceImpl.updateCrystal(Crystal crystal) {
        return crystalRepository.save(crystal);
    }
    
}
