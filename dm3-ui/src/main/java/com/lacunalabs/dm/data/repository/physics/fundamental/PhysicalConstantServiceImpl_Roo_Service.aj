// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.lacunalabs.dm.data.repository.physics.fundamental;

import com.lacunalabs.dm.data.physics.fundamental.PhysicalConstant;
import com.lacunalabs.dm.data.repository.physics.fundamental.PhysicalConstantRepository;
import com.lacunalabs.dm.data.repository.physics.fundamental.PhysicalConstantServiceImpl;
import java.math.BigInteger;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect PhysicalConstantServiceImpl_Roo_Service {
    
    declare @type: PhysicalConstantServiceImpl: @Service;
    
    declare @type: PhysicalConstantServiceImpl: @Transactional;
    
    @Autowired
    PhysicalConstantRepository PhysicalConstantServiceImpl.physicalConstantRepository;
    
    public long PhysicalConstantServiceImpl.countAllPhysicalConstants() {
        return physicalConstantRepository.count();
    }
    
    public void PhysicalConstantServiceImpl.deletePhysicalConstant(PhysicalConstant physicalConstant) {
        physicalConstantRepository.delete(physicalConstant);
    }
    
    public PhysicalConstant PhysicalConstantServiceImpl.findPhysicalConstant(BigInteger id) {
        return physicalConstantRepository.findOne(id);
    }
    
    public List<PhysicalConstant> PhysicalConstantServiceImpl.findAllPhysicalConstants() {
        return physicalConstantRepository.findAll();
    }
    
    public List<PhysicalConstant> PhysicalConstantServiceImpl.findPhysicalConstantEntries(int firstResult, int maxResults) {
        return physicalConstantRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / maxResults, maxResults)).getContent();
    }
    
    public void PhysicalConstantServiceImpl.savePhysicalConstant(PhysicalConstant physicalConstant) {
        physicalConstantRepository.save(physicalConstant);
    }
    
    public PhysicalConstant PhysicalConstantServiceImpl.updatePhysicalConstant(PhysicalConstant physicalConstant) {
        return physicalConstantRepository.save(physicalConstant);
    }
    
}
