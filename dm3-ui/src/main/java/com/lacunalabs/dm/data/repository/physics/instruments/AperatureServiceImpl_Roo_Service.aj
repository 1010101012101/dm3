// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.lacunalabs.dm.data.repository.physics.instruments;

import com.lacunalabs.dm.data.physics.instruments.Aperature;
import com.lacunalabs.dm.data.repository.physics.instruments.AperatureRepository;
import com.lacunalabs.dm.data.repository.physics.instruments.AperatureServiceImpl;
import java.math.BigInteger;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect AperatureServiceImpl_Roo_Service {
    
    declare @type: AperatureServiceImpl: @Service;
    
    declare @type: AperatureServiceImpl: @Transactional;
    
    @Autowired
    AperatureRepository AperatureServiceImpl.aperatureRepository;
    
    public long AperatureServiceImpl.countAllAperatures() {
        return aperatureRepository.count();
    }
    
    public void AperatureServiceImpl.deleteAperature(Aperature aperature) {
        aperatureRepository.delete(aperature);
    }
    
    public Aperature AperatureServiceImpl.findAperature(BigInteger id) {
        return aperatureRepository.findOne(id);
    }
    
    public List<Aperature> AperatureServiceImpl.findAllAperatures() {
        return aperatureRepository.findAll();
    }
    
    public List<Aperature> AperatureServiceImpl.findAperatureEntries(int firstResult, int maxResults) {
        return aperatureRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / maxResults, maxResults)).getContent();
    }
    
    public void AperatureServiceImpl.saveAperature(Aperature aperature) {
        aperatureRepository.save(aperature);
    }
    
    public Aperature AperatureServiceImpl.updateAperature(Aperature aperature) {
        return aperatureRepository.save(aperature);
    }
    
}
