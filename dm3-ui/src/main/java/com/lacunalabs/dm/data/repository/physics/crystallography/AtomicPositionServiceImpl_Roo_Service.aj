// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.lacunalabs.dm.data.repository.physics.crystallography;

import com.lacunalabs.dm.data.physics.crystallography.AtomicPosition;
import com.lacunalabs.dm.data.repository.physics.crystallography.AtomicPositionRepository;
import com.lacunalabs.dm.data.repository.physics.crystallography.AtomicPositionServiceImpl;
import java.math.BigInteger;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect AtomicPositionServiceImpl_Roo_Service {
    
    declare @type: AtomicPositionServiceImpl: @Service;
    
    declare @type: AtomicPositionServiceImpl: @Transactional;
    
    @Autowired
    AtomicPositionRepository AtomicPositionServiceImpl.atomicPositionRepository;
    
    public long AtomicPositionServiceImpl.countAllAtomicPositions() {
        return atomicPositionRepository.count();
    }
    
    public void AtomicPositionServiceImpl.deleteAtomicPosition(AtomicPosition atomicPosition) {
        atomicPositionRepository.delete(atomicPosition);
    }
    
    public AtomicPosition AtomicPositionServiceImpl.findAtomicPosition(BigInteger id) {
        return atomicPositionRepository.findOne(id);
    }
    
    public List<AtomicPosition> AtomicPositionServiceImpl.findAllAtomicPositions() {
        return atomicPositionRepository.findAll();
    }
    
    public List<AtomicPosition> AtomicPositionServiceImpl.findAtomicPositionEntries(int firstResult, int maxResults) {
        return atomicPositionRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / maxResults, maxResults)).getContent();
    }
    
    public void AtomicPositionServiceImpl.saveAtomicPosition(AtomicPosition atomicPosition) {
        atomicPositionRepository.save(atomicPosition);
    }
    
    public AtomicPosition AtomicPositionServiceImpl.updateAtomicPosition(AtomicPosition atomicPosition) {
        return atomicPositionRepository.save(atomicPosition);
    }
    
}
