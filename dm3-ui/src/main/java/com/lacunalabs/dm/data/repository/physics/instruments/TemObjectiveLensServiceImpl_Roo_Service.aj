// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.lacunalabs.dm.data.repository.physics.instruments;

import com.lacunalabs.dm.data.physics.instruments.TemObjectiveLens;
import com.lacunalabs.dm.data.repository.physics.instruments.TemObjectiveLensRepository;
import com.lacunalabs.dm.data.repository.physics.instruments.TemObjectiveLensServiceImpl;
import java.math.BigInteger;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect TemObjectiveLensServiceImpl_Roo_Service {
    
    declare @type: TemObjectiveLensServiceImpl: @Service;
    
    declare @type: TemObjectiveLensServiceImpl: @Transactional;
    
    @Autowired
    TemObjectiveLensRepository TemObjectiveLensServiceImpl.temObjectiveLensRepository;
    
    public long TemObjectiveLensServiceImpl.countAllTemObjectiveLenses() {
        return temObjectiveLensRepository.count();
    }
    
    public void TemObjectiveLensServiceImpl.deleteTemObjectiveLens(TemObjectiveLens temObjectiveLens) {
        temObjectiveLensRepository.delete(temObjectiveLens);
    }
    
    public TemObjectiveLens TemObjectiveLensServiceImpl.findTemObjectiveLens(BigInteger id) {
        return temObjectiveLensRepository.findOne(id);
    }
    
    public List<TemObjectiveLens> TemObjectiveLensServiceImpl.findAllTemObjectiveLenses() {
        return temObjectiveLensRepository.findAll();
    }
    
    public List<TemObjectiveLens> TemObjectiveLensServiceImpl.findTemObjectiveLensEntries(int firstResult, int maxResults) {
        return temObjectiveLensRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / maxResults, maxResults)).getContent();
    }
    
    public void TemObjectiveLensServiceImpl.saveTemObjectiveLens(TemObjectiveLens temObjectiveLens) {
        temObjectiveLensRepository.save(temObjectiveLens);
    }
    
    public TemObjectiveLens TemObjectiveLensServiceImpl.updateTemObjectiveLens(TemObjectiveLens temObjectiveLens) {
        return temObjectiveLensRepository.save(temObjectiveLens);
    }
    
}
