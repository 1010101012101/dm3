// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.lacunalabs.dm.data.repository.physics.solidstate;

import com.lacunalabs.dm.data.physics.solidstate.MaterialComponent;
import com.lacunalabs.dm.data.repository.physics.solidstate.MaterialComponentRepository;
import com.lacunalabs.dm.data.repository.physics.solidstate.MaterialComponentServiceImpl;
import java.math.BigInteger;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect MaterialComponentServiceImpl_Roo_Service {
    
    declare @type: MaterialComponentServiceImpl: @Service;
    
    declare @type: MaterialComponentServiceImpl: @Transactional;
    
    @Autowired
    MaterialComponentRepository MaterialComponentServiceImpl.materialComponentRepository;
    
    public long MaterialComponentServiceImpl.countAllMaterialComponents() {
        return materialComponentRepository.count();
    }
    
    public void MaterialComponentServiceImpl.deleteMaterialComponent(MaterialComponent materialComponent) {
        materialComponentRepository.delete(materialComponent);
    }
    
    public MaterialComponent MaterialComponentServiceImpl.findMaterialComponent(BigInteger id) {
        return materialComponentRepository.findOne(id);
    }
    
    public List<MaterialComponent> MaterialComponentServiceImpl.findAllMaterialComponents() {
        return materialComponentRepository.findAll();
    }
    
    public List<MaterialComponent> MaterialComponentServiceImpl.findMaterialComponentEntries(int firstResult, int maxResults) {
        return materialComponentRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / maxResults, maxResults)).getContent();
    }
    
    public void MaterialComponentServiceImpl.saveMaterialComponent(MaterialComponent materialComponent) {
        materialComponentRepository.save(materialComponent);
    }
    
    public MaterialComponent MaterialComponentServiceImpl.updateMaterialComponent(MaterialComponent materialComponent) {
        return materialComponentRepository.save(materialComponent);
    }
    
}
