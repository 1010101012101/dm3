// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.lacunalabs.dm.data.repository.physics.fundamental;

import com.lacunalabs.dm.data.physics.fundamental.DecimalMultiplier;
import com.lacunalabs.dm.data.repository.physics.fundamental.DecimalMultiplierRepository;
import com.lacunalabs.dm.data.repository.physics.fundamental.DecimalMultiplierServiceImpl;
import java.math.BigInteger;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect DecimalMultiplierServiceImpl_Roo_Service {
    
    declare @type: DecimalMultiplierServiceImpl: @Service;
    
    declare @type: DecimalMultiplierServiceImpl: @Transactional;
    
    @Autowired
    DecimalMultiplierRepository DecimalMultiplierServiceImpl.decimalMultiplierRepository;
    
    public long DecimalMultiplierServiceImpl.countAllDecimalMultipliers() {
        return decimalMultiplierRepository.count();
    }
    
    public void DecimalMultiplierServiceImpl.deleteDecimalMultiplier(DecimalMultiplier decimalMultiplier) {
        decimalMultiplierRepository.delete(decimalMultiplier);
    }
    
    public DecimalMultiplier DecimalMultiplierServiceImpl.findDecimalMultiplier(BigInteger id) {
        return decimalMultiplierRepository.findOne(id);
    }
    
    public List<DecimalMultiplier> DecimalMultiplierServiceImpl.findAllDecimalMultipliers() {
        return decimalMultiplierRepository.findAll();
    }
    
    public List<DecimalMultiplier> DecimalMultiplierServiceImpl.findDecimalMultiplierEntries(int firstResult, int maxResults) {
        return decimalMultiplierRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / maxResults, maxResults)).getContent();
    }
    
    public void DecimalMultiplierServiceImpl.saveDecimalMultiplier(DecimalMultiplier decimalMultiplier) {
        decimalMultiplierRepository.save(decimalMultiplier);
    }
    
    public DecimalMultiplier DecimalMultiplierServiceImpl.updateDecimalMultiplier(DecimalMultiplier decimalMultiplier) {
        return decimalMultiplierRepository.save(decimalMultiplier);
    }
    
}
